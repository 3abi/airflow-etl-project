import xml.etree.ElementTree as ET
from deepdiff import DeepDiff

def xml_to_dict(xml_path):
    def parse_element(element):
        parsed = {element.tag: {} if element.attrib else None}
        children = list(element)
        if children:
            dd = {}
            for dc in map(parse_element, children):
                for k, v in dc.items():
                    if k in dd:
                        if isinstance(dd[k], list):
                            dd[k].append(v)
                        else:
                            dd[k] = [dd[k], v]
                    else:
                        dd[k] = v
            parsed[element.tag] = dd
        if element.attrib:
            parsed[element.tag].update(('@' + k, v) for k, v in element.attrib.items())
        if element.text and element.text.strip():
            text = element.text.strip()
            if children or element.attrib:
                parsed[element.tag]['#text'] = text
            else:
                parsed[element.tag] = text
        return parsed

    tree = ET.parse(xml_path)
    root = tree.getroot()
    return parse_element(root)

# Chemins des fichiers
ancien = "C:/chemin/vers/ancien.xml"
nouveau = "C:/chemin/vers/nouveau.xml"

# Parsing
xml1 = xml_to_dict(ancien)
xml2 = xml_to_dict(nouveau)

# Comparaison
diff = DeepDiff(xml1, xml2, ignore_order=True)

# Résultat
if diff:
    print("❗Différences détectées :")
    print(diff)
else:
    print("✅ Les deux fichiers sont équivalents (structure et contenu).")
