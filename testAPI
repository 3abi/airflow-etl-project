// Version modifiée du script avec détection automatique du secteur et pondérations adaptées

// Exemple de récupération du secteur (à appeler lors de la récupération des données de l'action) 

async function getSectorInfo(symbol) { const url = https://yh-finance.p.rapidapi.com/stock/v2/get-summary?symbol=${symbol}&region=US; 

const response = await fetch(url, { 

method: "GET", 
headers: { "X-RapidAPI-Key": apiKey, "X-RapidAPI-Host": apiHost } }); 

const data = await response.json(); 

return data.summaryProfile?.sector || null; }

// Déterminer les pondérations en fonction du secteur détecté function getWeightingsBySector(sector) { if (!sector) return { PER: 0.30, PCF: 0.25, PSR: 0.20, PBR: 0.25 }; // par défaut

const s = sector.toLowerCase(); if (s.includes("technology") || s.includes("consumer cyclical")) { return { PER: 0.30, PCF: 0.35, PSR: 0.20, PBR: 0.15 }; 

} else if (s.includes("financial") || s.includes("real estate")) { return { PER: 0.30, PCF: 0.15, PSR: 0.15, PBR: 0.40 }; 
} else if (s.includes("industrial") || s.includes("utilities")) { return { PER: 0.35, PCF: 0.20, PSR: 0.15, PBR: 0.30 }; 
} else { 
return { PER: 0.30, PCF: 0.25, PSR: 0.20, PBR: 0.25 }; // fallback 

} }

// Intégration dans le calcul principal avec pondération dynamique const sector = await getSectorInfo(symbol); const weights = getWeightingsBySector(sector);

const fairAvg = (fairValues.PER ? fairValues.PER * weights.PER : 0) + (fairValues.PCF ? fairValues.PCF * weights.PCF : 0) + (fairValues.PSR ? fairValues.PSR * weights.PSR : 0) + (fairValues.PBR ? fairValues.PBR * weights.PBR : 0);

const totalWeight = (fairValues.PER ? weights.PER : 0) + (fairValues.PCF ? weights.PCF : 0) + (fairValues.PSR ? weights.PSR : 0) + (fairValues.PBR ? weights.PBR : 0);

const fairAvgWeighted = totalWeight > 0 ? fairAvg / totalWeight : null;

// Calcul du % de sous-/surévaluation const upside = fairAvgWeighted && priceCurrent ? ((fairAvgWeighted / priceCurrent - 1) * 100) : null;

const finalOutput = { 'Nom de l'action': name, 'Cours actuel': formatVal(priceCurrent), 'Devise': currency, 'Secteur détecté': sector || 'Inconnu', 'Juste Valeur Moyenne pondérée': formatVal(fairAvgWeighted), '% Sur/Sous-évaluation': upside !== null ? ${upside.toFixed(2)}% : 'N/A', 'Évaluation': upside !== null ? (upside > 0 ? 'Sous-évaluée' : 'Surévaluée') : 'Non déterminée' };
