from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
import asyncpg
import httpx
import re

app = FastAPI()

# Autoriser CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

# Connexion DB PostgreSQL
DATABASE_URL = "postgresql://demo:demo@postgres:5432/demo"

# Extraction SQL depuis texte libre
def extract_sql(text):
    match = re.search(r"```sql\s*(.*?)```", text, re.DOTALL | re.IGNORECASE)
    if match:
        return match.group(1).strip()

    match = re.search(r"(SELECT|INSERT|UPDATE|DELETE).*?;", text, re.IGNORECASE | re.DOTALL)
    if match:
        return match.group(0).strip()
    
    return None

@app.post("/query")
async def query_data(request: Request):
    data = await request.json()
    prompt = data.get("prompt")

    # Prompt structuré au LLM
    full_prompt = f"""
Tu es un assistant expert en SQL PostgreSQL.
Ta mission est de répondre à la question suivante, en :
1. Donnant une explication courte de la requête à générer
2. Fournissant une requête SQL complète et exécutable
Formate la requête SQL dans un bloc ```sql ... ```
Question : {prompt}
    """

    # Appel API au serveur Ollama local
    async with httpx.AsyncClient(timeout=60.0) as client:
        res = await client.post(
            "http://ollama:11434/api/generate",
            json={"model": "phi3", "prompt": full_prompt}
        )

    llm_response = res.json()["response"]
    sql_query = extract_sql(llm_response)

    if not sql_query:
        return {"error": "Aucune requête SQL trouvée dans la réponse LLM.", "llm_response": llm_response}

    # Exécution SQL
    try:
        conn = await asyncpg.connect(DATABASE_URL)
        rows = await conn.fetch(sql_query)
        await conn.close()
        result = [dict(r) for r in rows]
    except Exception as e:
        result = f"Erreur SQL : {str(e)}"

    return {
        "prompt": prompt,
        "llm_response": llm_response,
        "sql_extracted": sql_query,
        "result": result
    }
