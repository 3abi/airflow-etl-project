# TNR méthode 2
# definir les reps des deux versions + recu^èrer tous les fichiers (xml csv logs ...) + sous dossiers aussi
# préciser quel type de fichiers à comparer
# un bilan stats descriptifs : 
# 1. l'existence du fichier dans les deux dossiers 
# 2. taille des fichiers
#
# un bilan détailé selon la méthode générique :
# . Methode 2 
#  Un bilan spècifique pr les XMLs :
#  . Méthode 1
# un script global qui fait les deux méthodes (1 & 2) : implimente cette approche 
# 


# 
# 

file1 = "toto"
file2 = "tata"

# trier les lignes de chaque fichier (sublime_text)
file1_sorted = sublime_text.exe file1 sort_lines()
file2_sorted = sublime_text.exe file2 sort_lines()

# comparer les fichiers ainsi triés
report = winmerge.exe file1_sorted file2_sorted





import os
from xmldiff import main
import sys


# méthode 1


# Rediriger les prints vers un fichier
sys.stdout = open('C:/LOXAM/last_sortie.txt', 'w')


# === Répertoires source ===
dir1 = "C:/LOXAM/XML_sections_V1_1mois/"
dir2 = "C:/LOXAM/XML_sections_V2_1mois/"

# === Lister les fichiers communs (par nom) ===
fichiers1 = set(f for f in os.listdir(dir1) if f.endswith(".xml"))
fichiers2 = set(f for f in os.listdir(dir2) if f.endswith(".xml"))
fichiers_communs = sorted(fichiers1 & fichiers2)

if not fichiers_communs:
    print("Aucun fichier XML commun trouvé entre les deux répertoires.")
    exit()

# === Comparaison fichier par fichier ===
for fichier in fichiers_communs:
    path1 = os.path.join(dir1, fichier)
    path2 = os.path.join(dir2, fichier)
    
    print(f"chemin fichier_dir1: {path1}")
    print(f"chemin fichier_dir2: {path2}")

    print(f"\nComparaison de : {fichier}")
    try:
        # 
        diff = main.diff_files(path1, path2, diff_options={'F': 1, 'ratio_mode': 'accurate'})

        if diff:
            print("Différences détectées :")
            for line in diff:
                print("  •", line)
        else:
            print("Aucun changement détecté.")

    except Exception as e:
        print(f"Erreur lors de la comparaison de {fichier} : {e}")
