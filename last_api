<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Exploration complète API Boursières</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      padding: 20px;
    }
    input, button {
      padding: 8px;
      font-size: 16px;
    }
    .section {
      background: #fff;
      margin: 20px 0;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    h1, h2 {
      color: #333;
    }
    pre {
      background: #f0f0f0;
      padding: 10px;
      border-radius: 5px;
      overflow-x: auto;
    }
    canvas {
      background: #fff;
      padding: 10px;
      border-radius: 8px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
      margin: 20px 0;
    }
    .toggle-btn {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 5px 10px;
      margin-bottom: 10px;
      border-radius: 4px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>PROMETHEE {based on Yahoo Finance}</h1>
  <label for="symbol">Symbole boursier :</label>
  <input type="text" id="symbol" placeholder="Ex : AAPL">
  <button onclick="getAllStockData()">Obtenir les données</button>

  <canvas id="priceChart" width="800" height="400"></canvas>
  <div id="results"></div>

  <script>
    const yahooFinanceApiKey = '';
    const marketstackApiKey = '';

    async function fetchYahooChart(symbol) {
      const url = `https://query1.finance.yahoo.com/v8/finance/chart/${symbol}?interval=1mo&range=5y`;
      const response = await fetch(url);
      if (!response.ok) throw new Error('Erreur Yahoo Chart');
      return await response.json();
    }

    function plotPriceChart(timestamps, prices, symbol) {
      const ctx = document.getElementById('priceChart').getContext('2d');
      if (window.priceChartInstance) window.priceChartInstance.destroy();

      window.priceChartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels: timestamps.map(t => new Date(t * 1000).toLocaleDateString()),
          datasets: [{
            label: `Cours de l'action ${symbol} (5 ans)` ,
            data: prices,
            borderColor: 'blue',
            backgroundColor: 'lightblue',
            fill: false,
            tension: 0.1
          }]
        },
        options: {
          responsive: true,
          scales: {
            x: {
              title: { display: true, text: 'Date' }
            },
            y: {
              title: { display: true, text: 'Prix de clôture' }
            }
          }
        }
      });
    }

    async function getAllStockData() {
      const symbol = document.getElementById('symbol').value.trim().toUpperCase();
      if (!symbol) return alert("Veuillez saisir un symbole.");

      const resultsDiv = document.getElementById('results');
      resultsDiv.innerHTML = '<p>Chargement...</p>';

      try {
        const yahooChartData = await fetchYahooChart(symbol);
        const chartData = yahooChartData.chart.result[0];
        const timestamps = chartData.timestamp;
        const closePrices = chartData.indicators.quote[0].close;
        plotPriceChart(timestamps, closePrices, symbol);

        // Le reste de ton code existant peut suivre ici
        resultsDiv.innerHTML += '<p>✅ Graphique historique chargé avec succès.</p>';

      } catch (error) {
        resultsDiv.innerHTML = '<p style="color:red">Erreur : ' + error.message + '</p>';
      }
    }
  </script>
</body>
</html>
