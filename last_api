from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
import json

app = FastAPI()

# CORS pour autoriser requêtes JS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # en prod : ["http://localhost:8000"]
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Serve le HTML en statique
app.mount("/", StaticFiles(directory="static", html=True), name="static")

# Simule la logique IA + SQL (à remplacer par ton vrai code)
@app.post("/query")
async def handle_prompt(request: Request):
    data = await request.json()
    prompt = data.get("prompt", "").lower()

    # Démo : réponse simulée
    if "client" in prompt:
        query = "SELECT * FROM clients ORDER BY date_inscription DESC LIMIT 5;"
        results = [
            {"id": 1, "nom": "Alice", "date_inscription": "2024-01-12"},
            {"id": 2, "nom": "Bob", "date_inscription": "2024-03-22"},
        ]
    else:
        query = "SELECT * FROM clients;"
        results = []

    return {"query": query, "results": results}



<script>
async function sendPrompt() {
    const prompt = document.getElementById("prompt").value;
    const res = await fetch("/query", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ prompt })
    });
    const data = await res.json();
    document.getElementById("output").textContent = JSON.stringify(data, null, 2);
}
</script>


