<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Historique Boursier avec Graphique</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f9f9f9;
      padding: 2rem;
      color: #333;
    }

    h2 {
      margin-bottom: 1rem;
    }

    input, button {
      padding: 10px;
      margin-right: 0.5rem;
      margin-bottom: 1rem;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 1rem;
    }

    button {
      background-color: #007BFF;
      color: #fff;
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    #output {
      margin-top: 2rem;
      background: #fff;
      padding: 1rem;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    canvas {
      display: none;
      margin-top: 1rem;
    }

    .error {
      color: red;
    }

    ul {
      padding-left: 0;
      list-style: none;
    }

    li {
      padding: 5px 0;
      border-bottom: 1px solid #eee;
    }
  </style>
</head>
<body>
  <h2>Historique boursier (avec graphique)</h2>
  <input type="text" id="symbolInput" placeholder="Ex: AAPL, MSFT, AIR.PA">
  <input type="date" id="startDate">
  <input type="date" id="endDate">
  <button id="getHistoryBtn">Afficher</button>
  <button id="downloadBtn" style="display:none;">üìÅ Export CSV</button>

  <div id="output">
    <canvas id="chart" width="600" height="300"></canvas>
    <ul id="historyList"></ul>
  </div>

  <script>
    const apiKey = "TA_CLE_API"; // üëâ Remplace avec ta vraie cl√© Marketstack

    document.getElementById("getHistoryBtn").addEventListener("click", getStockHistory);
    document.getElementById("downloadBtn").addEventListener("click", exportCSV);

    let chartInstance;
    let historyData = [];

    async function getStockHistory() {
      const symbol = document.getElementById("symbolInput").value.trim().toUpperCase();
      const start = document.getElementById("startDate").value;
      const end = document.getElementById("endDate").value;
      const historyList = document.getElementById("historyList");
      const downloadBtn = document.getElementById("downloadBtn");
      const chartCanvas = document.getElementById("chart");

      historyList.innerHTML = "";
      chartCanvas.style.display = "none";
      downloadBtn.style.display = "none";

      if (!symbol) {
        historyList.innerHTML = "<p class='error'>Veuillez saisir un symbole.</p>";
        return;
      }

      const url = new URL("http://api.marketstack.com/v1/eod");
      url.searchParams.set("access_key", apiKey);
      url.searchParams.set("symbols", symbol);
      if (start) url.searchParams.set("date_from", start);
      if (end) url.searchParams.set("date_to", end);
      url.searchParams.set("limit", 100);

      try {
        const res = await fetch(url);
        const json = await res.json();

        if (!json.data || json.data.length === 0) {
          historyList.innerHTML = "<p class='error'>Aucune donn√©e trouv√©e.</p>";
          return;
        }

        historyData = json.data.reverse(); // ordre chronologique
        downloadBtn.style.display = "inline-block";

        const labels = historyData.map(item => new Date(item.date).toLocaleDateString());
        const prices = historyData.map(item => item.close);

        historyList.innerHTML = historyData.map(d =>
          `<li><strong>${new Date(d.date).toLocaleDateString()}</strong> : ${d.close} USD</li>`
        ).join('');

        renderChart(labels, prices, symbol);
        chartCanvas.style.display = "block";

      } catch (err) {
        console.error(err);
        historyList.innerHTML = "<p class='error'>Erreur lors du chargement.</p>";
      }
    }

    function renderChart(labels, data, symbol) {
      const ctx = document.getElementById("chart").getContext("2d");

      if (chartInstance) {
        chartInstance.destroy();
      }

      chartInstance = new Chart(ctx, {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: `Cl√¥ture (${symbol})`,
            data: data,
            fill: false,
            borderColor: '#007BFF',
            tension: 0.3
          }]
        },
        options: {
          responsive: true,
          plugins: {
            legend: { position: 'top' }
          },
          scales: {
            x: {
              display: true,
              title: { display: true, text: "Date" }
            },
            y: {
              display: true,
              title: { display: true, text: "Prix (USD)" }
            }
          }
        }
      });
    }

    function exportCSV() {
      if (historyData.length === 0) return;

      const csvContent = "data:text/csv;charset=utf-8,"
        + "Date,Cl√¥ture (USD)\n"
        + historyData.map(row =>
            `${new Date(row.date).toLocaleDateString()},${row.close}`
          ).join("\n");

      const encodedUri = encodeURI(csvContent);
      const link = document.createElement("a");
      link.setAttribute("href", encodedUri);
      link.setAttribute("download", "historique_boursier.csv");
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  </script>
</body>
</html>
