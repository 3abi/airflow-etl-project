<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Exploration des API Boursières</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: sans-serif;
            padding: 20px;
            background: #f8f8f8;
        }
        input, button {
            padding: 8px;
            font-size: 16px;
        }
        #results {
            margin-top: 30px;
        }
        .section {
            background: #fff;
            margin-bottom: 20px;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 0 5px rgba(0,0,0,0.1);
        }
        .section h2 {
            margin-bottom: 10px;
            font-size: 18px;
            color: #333;
        }
        pre {
            background: #f0f0f0;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
            max-height: 400px;
        }
        canvas {
            background: #fff;
            padding: 10px;
            border-radius: 8px;
            box-shadow: 0 0 5px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
    </style>
</head>
<body>

<h1>Exploration API Marketstack & Yahoo Finance</h1>

<label for="symbol">Symbole boursier (ex: AAPL, TSLA) :</label>
<input type="text" id="symbol" placeholder="Entrez le symbole...">
<button onclick="getAllStockData()">Obtenir les données</button>

<canvas id="priceChart" width="800" height="400"></canvas>
<div id="results"></div>

<script>
    const yahooFinanceApiKey = 'VOTRE_CLE_YAHOO';
    const marketstackApiKey = 'VOTRE_CLE_MARKETSTACK';

    async function getAllStockData() {
        const symbol = document.getElementById('symbol').value.trim().toUpperCase();
        if (!symbol) {
            alert("Veuillez saisir un symbole.");
            return;
        }

        const resultsDiv = document.getElementById('results');
        resultsDiv.innerHTML = "<p>Chargement en cours...</p>";

        try {
            const [yahooData, marketstackLatest, marketstackHistory] = await Promise.all([
                fetchYahooFinanceData(symbol),
                fetchMarketstackLatest(symbol),
                fetchMarketstackHistory(symbol)
            ]);

            resultsDiv.innerHTML = '';

            displaySection("\u2705 Donn\u00e9es compl\u00e8tes Yahoo Finance", yahooData);
            displaySection("\u2705 Donn\u00e9es EOD - Actuelles (Marketstack)", marketstackLatest);
            displaySection("\u2705 Donn\u00e9es Historiques (Marketstack - 5 ans)", marketstackHistory);

            plotPriceChart(marketstackHistory);
        } catch (err) {
            console.error(err);
            resultsDiv.innerHTML = "<p style='color:red;'>Erreur lors de la r\u00e9cup\u00e9ration des donn\u00e9es. Consultez la console.</p>";
        }
    }

    async function fetchYahooFinanceData(symbol) {
        const url = `https://yfapi.net/v11/finance/quoteSummary/${symbol}?modules=price,summaryDetail,financialData,defaultKeyStatistics,calendarEvents,earnings,esgScores`;

        const res = await fetch(url, {
            headers: {
                'x-api-key': yahooFinanceApiKey
            }
        });

        if (!res.ok) throw new Error("Erreur Yahoo Finance");
        const data = await res.json();
        return data.quoteSummary.result[0];
    }

    async function fetchMarketstackLatest(symbol) {
        const url = `https://api.marketstack.com/v1/eod/latest?access_key=${marketstackApiKey}&symbols=${symbol}`;

        const res = await fetch(url);
        if (!res.ok) throw new Error("Erreur Marketstack - Dernier jour");

        const data = await res.json();
        return data.data[0];
    }

    async function fetchMarketstackHistory(symbol) {
        const url = `https://api.marketstack.com/v1/eod?access_key=${marketstackApiKey}&symbols=${symbol}&limit=1200&sort=DESC`;

        const res = await fetch(url);
        if (!res.ok) throw new Error("Erreur Marketstack - Historique");

        const data = await res.json();
        return data.data;
    }

    function displaySection(title, dataObj) {
        const container = document.createElement("div");
        container.className = "section";

        const h2 = document.createElement("h2");
        h2.textContent = title;

        const pre = document.createElement("pre");
        pre.textContent = JSON.stringify(dataObj, null, 2);

        container.appendChild(h2);
        container.appendChild(pre);
        document.getElementById("results").appendChild(container);
    }

    function plotPriceChart(data) {
        const sortedData = data.slice().reverse();
        const dates = sortedData.map(d => d.date.substring(0, 10));
        const prices = sortedData.map(d => d.close);

        const ctx = document.getElementById('priceChart').getContext('2d');
        if (window.priceChartInstance) window.priceChartInstance.destroy();

        window.priceChartInstance = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Prix de Clôture (Marketstack)',
                    data: prices,
                    borderColor: 'blue',
                    borderWidth: 2,
                    fill: false,
                    pointRadius: 0
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: { display: true, title: { display: true, text: 'Date' } },
                    y: { display: true, title: { display: true, text: 'Prix ($)' } }
                }
            }
        });
    }
</script>

</body>
</html>
