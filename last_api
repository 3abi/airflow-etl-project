<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Exploration compl√®te API Boursi√®res</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f4f4;
      padding: 20px;
    }
    input, button {
      padding: 8px;
      font-size: 16px;
    }
    .section {
      background: #fff;
      margin: 20px 0;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    h1, h2 {
      color: #333;
    }
    pre {
      background: #f0f0f0;
      padding: 10px;
      border-radius: 5px;
      overflow-x: auto;
    }
    canvas {
      background: #fff;
      padding: 10px;
      border-radius: 8px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
      margin: 20px 0;
    }
    .toggle-btn {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 5px 10px;
      margin-bottom: 10px;
      border-radius: 4px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>Exploration compl√®te des APIs Marketstack & Yahoo Finance</h1>
  <label for="symbol">Symbole boursier :</label>
  <input type="text" id="symbol" placeholder="Ex : AAPL">
  <button onclick="getAllStockData()">Obtenir les donn√©es</button>

  <canvas id="priceChart" width="800" height="400"></canvas>
  <canvas id="intradayChart" width="800" height="400"></canvas>
  <div id="results"></div>

  <script>
    const yahooFinanceApiKey = 'VOTRE_CLE_YAHOO';
    const marketstackApiKey = 'VOTRE_CLE_MARKETSTACK';

    async function getAllStockData() {
      const symbol = document.getElementById('symbol').value.trim().toUpperCase();
      if (!symbol) return alert("Veuillez saisir un symbole.");

      const resultsDiv = document.getElementById('results');
      resultsDiv.innerHTML = '<p>Chargement...</p>';

      const endpoints = [
        { id: 'eod_latest', title: 'üìà Donn√©es EOD actuelles', path: `/eod/latest?access_key=${marketstackApiKey}&symbols=${symbol}` },
        { id: 'eod_history', title: 'üï∞Ô∏è Historique (5 ans)', path: `/eod?access_key=${marketstackApiKey}&symbols=${symbol}&limit=1200&sort=DESC` },
        { id: 'ticker', title: '‚ÑπÔ∏è Informations Ticker', path: `/tickers/${symbol}?access_key=${marketstackApiKey}` },
        { id: 'exchanges', title: 'üåç March√©s Boursiers (Exchanges)', path: `/exchanges?access_key=${marketstackApiKey}` },
        { id: 'intraday', title: '‚è±Ô∏è Intraday 1min', path: `/intraday?access_key=${marketstackApiKey}&symbols=${symbol}&interval=1min&limit=50` },
        { id: 'dividends', title: 'üí∞ Dividendes', path: `/dividends?access_key=${marketstackApiKey}&symbols=${symbol}` },
        { id: 'splits', title: 'üîÄ Fractionnements d‚Äôactions (Splits)', path: `/splits?access_key=${marketstackApiKey}&symbols=${symbol}` }
      ];

      try {
        const yahooData = await fetchYahooFinanceData(symbol);
        resultsDiv.innerHTML = '';

        for (const [key, value] of Object.entries(yahooData)) {
          displaySection(`‚ú® Module Yahoo : ${key}`, value);
        }

        for (const endpoint of endpoints) {
          try {
            const data = await fetchMarketstackEndpoint(endpoint.path);
            displaySection(`‚úÖ Marketstack - ${endpoint.title}`, data.data || data);
            if (endpoint.id === 'eod_history') {
              plotPriceChart(data.data || data);
            }
            if (endpoint.id === 'intraday') {
              plotIntradayChart(data.data || data);
            }
            if (endpoint.id === 'ticker') {
              displayReadableTicker(data.data);
            }
          } catch (e) {
            displaySection(`‚ùå Marketstack - ${endpoint.title}`, { erreur: e.message });
          }
        }
      } catch (error) {
        console.error(error);
        resultsDiv.innerHTML = '<p style="color:red">Erreur globale lors de la r√©cup√©ration des donn√©es. Consultez la console.</p>';
      }
    }

    // ... le reste du code reste inchang√© ...
  </script>
</body>
</html>
